(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{608:function(t,a,e){"use strict";e.r(a);var r=e(65),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[t._v("#")]),t._v(" 工具")]),t._v(" "),e("h2",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),e("h3",{attrs:{id:"tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[t._v("#")]),t._v(" tag")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("git tag 1.0.0")]),t._v(" "),e("ul",[e("li",[t._v("git push --tags")]),t._v(" "),e("li",[t._v("git push origin 1.0.0")])])]),t._v(" "),e("li",[e("p",[t._v("删除tag:git tag -d 1.0.0")]),t._v(" "),e("ul",[e("li",[t._v("git push origin  :refs/tags/1.0.0")])])])]),t._v(" "),e("h3",{attrs:{id:"git-init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-init"}},[t._v("#")]),t._v(" git init")]),t._v(" "),e("h3",{attrs:{id:"git-add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-add"}},[t._v("#")]),t._v(" git add .")]),t._v(" "),e("h3",{attrs:{id:"git-commit-m-init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-m-init"}},[t._v("#")]),t._v(' git commit -m "init"')]),t._v(" "),e("ul",[e("li",[t._v("-m可以输入信息")]),t._v(" "),e("li",[t._v("-a将修改或删除提交到本地仓库，即使他们没有经过git add添加到暂存区")])]),t._v(" "),e("h3",{attrs:{id:"git-remote-add-origin-https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-remote-add-origin-https"}},[t._v("#")]),t._v(" git remote add origin https://")]),t._v(" "),e("h3",{attrs:{id:"git-remote-v"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-remote-v"}},[t._v("#")]),t._v(" git remote -v")]),t._v(" "),e("h3",{attrs:{id:"git-remote-remove-origin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-remote-remove-origin"}},[t._v("#")]),t._v(" git remote remove origin")]),t._v(" "),e("h3",{attrs:{id:"git-push-origin-master"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-push-origin-master"}},[t._v("#")]),t._v(" git push origin master")]),t._v(" "),e("h3",{attrs:{id:"查看所有分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看所有分支"}},[t._v("#")]),t._v(" 查看所有分支")]),t._v(" "),e("ul",[e("li",[t._v("git branch 空/-a/-r")])]),t._v(" "),e("h3",{attrs:{id:"拉去分支代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉去分支代码"}},[t._v("#")]),t._v(" 拉去分支代码")]),t._v(" "),e("ul",[e("li",[t._v("git clone -b develop XXX")])]),t._v(" "),e("h3",{attrs:{id:"切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[t._v("#")]),t._v(" 切换分支")]),t._v(" "),e("ul",[e("li",[t._v("git checkout develop")])]),t._v(" "),e("h3",{attrs:{id:"推送失败时还原"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送失败时还原"}},[t._v("#")]),t._v(" 推送失败时还原")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("git merge --abort\ngit reset --merge")])]),t._v(" "),e("li",[e("p",[t._v("硬重置")]),t._v(" "),e("ul",[e("li",[t._v("git reset --hard origin/master")])])])]),t._v(" "),e("h3",{attrs:{id:"从commit恢复到本地"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从commit恢复到本地"}},[t._v("#")]),t._v(" 从commit恢复到本地")]),t._v(" "),e("ul",[e("li",[t._v("git reset --soft HEAD~1")])]),t._v(" "),e("h3",{attrs:{id:"重新设置lfs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重新设置lfs"}},[t._v("#")]),t._v(" 重新设置lfs")]),t._v(" "),e("ul",[e("li",[t._v("git config --global --unset lfs.url")])]),t._v(" "),e("h2",{attrs:{id:"oc转c-c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oc转c-c"}},[t._v("#")]),t._v(" oc转c/c++")]),t._v(" "),e("h3",{attrs:{id:"clang-rewrite-objc-main-m-o-main-cpp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clang-rewrite-objc-main-m-o-main-cpp"}},[t._v("#")]),t._v(" clang -rewrite-objc main.m -o main.cpp")]),t._v(" "),e("h3",{attrs:{id:"clang-rewrite-objc-main-m-o-main-c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clang-rewrite-objc-main-m-o-main-c"}},[t._v("#")]),t._v(" clang -rewrite-objc main.m -o main.c")]),t._v(" "),e("h2",{attrs:{id:"c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[t._v("#")]),t._v(" C#")]),t._v(" "),e("h3",{attrs:{id:"创建console-application"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建console-application"}},[t._v("#")]),t._v(" 创建Console Application")]),t._v(" "),e("ul",[e("li",[t._v("dotnet new Console")])]),t._v(" "),e("h2",{attrs:{id:"cocoapods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cocoapods"}},[t._v("#")]),t._v(" CocoaPods")]),t._v(" "),e("h3",{attrs:{id:"pod-trunk-me"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod-trunk-me"}},[t._v("#")]),t._v(" pod trunk me")]),t._v(" "),e("h3",{attrs:{id:"私有库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#私有库"}},[t._v("#")]),t._v(" 私有库")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("1.建仓pod repo add 仓库名  仓库github地址")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("2.创建工程：pod lib create YourFrameworkName，添加文件到Classes后要pod update，然后打好tag并提交项目github地址(跟仓库地址不一样)")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("3.检查合法性：pod spec lint --allow-warnings")]),t._v(" "),e("ul",[e("li",[t._v("4.推送 podspec 到 specs repo：pod repo push 仓库名 YourPod.podspec")])])])])])])])]),t._v(" "),e("h3",{attrs:{id:"公有库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#公有库"}},[t._v("#")]),t._v(" 公有库")]),t._v(" "),e("ul",[e("li",[t._v("要发布到Cocoapods官方，只需要在前面私有库的基础上执行pod trunk push pod_test.podspec，然后更新本地pods仓库pod setup")])]),t._v(" "),e("h3",{attrs:{id:"创建-podspec-pod-spec-create-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建-podspec-pod-spec-create-name"}},[t._v("#")]),t._v(" 创建.podspec:pod spec create NAME")]),t._v(" "),e("h3",{attrs:{id:"远程检查pod-spec合法性-pod-spec-lint-name-podspec-verbose-sources-https-github-com-iosaour-modularizationpod-git-https-github-com-cocoapods-specs-git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程检查pod-spec合法性-pod-spec-lint-name-podspec-verbose-sources-https-github-com-iosaour-modularizationpod-git-https-github-com-cocoapods-specs-git"}},[t._v("#")]),t._v(" 远程检查pod spec合法性：pod spec lint NAME.podspec --verbose --sources='https://github.com/iOSAour/ModularizationPod.git,https://github.com/CocoaPods/Specs.git'")]),t._v(" "),e("h3",{attrs:{id:"本地检查pod-spec合法性-pod-lib-lint-allow-warnings-verbose-sources-https-github-com-iosaour-modularizationpod-git-https-github-com-cocoapods-specs-git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地检查pod-spec合法性-pod-lib-lint-allow-warnings-verbose-sources-https-github-com-iosaour-modularizationpod-git-https-github-com-cocoapods-specs-git"}},[t._v("#")]),t._v(" 本地检查pod spec合法性：pod lib lint --allow-warnings --verbose --sources='https://github.com/iOSAour/ModularizationPod.git,https://github.com/CocoaPods/Specs.git'")]),t._v(" "),e("h3",{attrs:{id:"发布-pod-trunk-push-name-podspec-allow-warnings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布-pod-trunk-push-name-podspec-allow-warnings"}},[t._v("#")]),t._v(" 发布：pod trunk push NAME.podspec --allow-warnings")]),t._v(" "),e("h3",{attrs:{id:"发布到私有仓库-pod-repo-push-privatepodrepo-tsbasicskit-podspec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布到私有仓库-pod-repo-push-privatepodrepo-tsbasicskit-podspec"}},[t._v("#")]),t._v(" 发布到私有仓库：pod repo push PrivatePodRepo TSBasicsKit.podspec")]),t._v(" "),e("h3",{attrs:{id:"升级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级"}},[t._v("#")]),t._v(" 升级")]),t._v(" "),e("ul",[e("li",[t._v("gem update --system")]),t._v(" "),e("li",[t._v("sudo gem install cocoapods -n /usr/local/bin")])]),t._v(" "),e("h2",{attrs:{id:"rvm升级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rvm升级"}},[t._v("#")]),t._v(" RVM升级")]),t._v(" "),e("h3",{attrs:{id:"rvm-get-stable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rvm-get-stable"}},[t._v("#")]),t._v(" rvm get stable")]),t._v(" "),e("h2",{attrs:{id:"ruby升级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ruby升级"}},[t._v("#")]),t._v(" ruby升级")]),t._v(" "),e("h3",{attrs:{id:"rvm-list-known"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rvm-list-known"}},[t._v("#")]),t._v(" rvm list known")]),t._v(" "),e("ul",[e("li",[t._v("rvm install ruby-2.7")])]),t._v(" "),e("h2",{attrs:{id:"解决git-clone慢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决git-clone慢"}},[t._v("#")]),t._v(" 解决git clone慢")]),t._v(" "),e("h3",{attrs:{id:"ssh-p-22-root-168-235-97-151"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh-p-22-root-168-235-97-151"}},[t._v("#")]),t._v(" ssh -p 22 root@168.235.97.151")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("wget 地址")]),t._v(" "),e("ul",[e("li",[t._v("拷贝远程服务器资源：scp root@168.235.97.151:/root/master ~/Desktop/master1")])])])]),t._v(" "),e("h2",{attrs:{id:"npm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[t._v("#")]),t._v(" npm")]),t._v(" "),e("h3",{attrs:{id:"升级package-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级package-json"}},[t._v("#")]),t._v(" 升级package.json")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("npm-check-updates或者ncu检查新版状态")]),t._v(" "),e("ul",[e("li",[t._v("ncu -u更新")])])])]),t._v(" "),e("h3",{attrs:{id:"npm装全局工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm装全局工具"}},[t._v("#")]),t._v(" npm装全局工具")]),t._v(" "),e("ul",[e("li",[t._v("npm install -g npm-check-updates")])]),t._v(" "),e("h3",{attrs:{id:"清理缓存npm-cache-clear-force"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#清理缓存npm-cache-clear-force"}},[t._v("#")]),t._v(" 清理缓存npm cache clear --force")]),t._v(" "),e("h3",{attrs:{id:"npm-install-react-native-gesture-handler-save"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-install-react-native-gesture-handler-save"}},[t._v("#")]),t._v(" npm install react-native-gesture-handler --save")]),t._v(" "),e("h3",{attrs:{id:"npm-install-eslint-save-dev"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-install-eslint-save-dev"}},[t._v("#")]),t._v(" npm install eslint --save-dev")]),t._v(" "),e("h3",{attrs:{id:"npm-update-eslint-save-dev"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-update-eslint-save-dev"}},[t._v("#")]),t._v(" npm update eslint --save-dev")]),t._v(" "),e("h3",{attrs:{id:"npm-run-build"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-run-build"}},[t._v("#")]),t._v(" npm run build")]),t._v(" "),e("ul",[e("li",[t._v("打包web")])]),t._v(" "),e("h3",{attrs:{id:"npm-run-serve"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-run-serve"}},[t._v("#")]),t._v(" npm run serve")]),t._v(" "),e("ul",[e("li",[t._v("运行服务")])]),t._v(" "),e("h3",{attrs:{id:"npm-run-serve-https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-run-serve-https"}},[t._v("#")]),t._v(" npm run serve --https")]),t._v(" "),e("h3",{attrs:{id:"node-server-js-ip-port"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-server-js-ip-port"}},[t._v("#")]),t._v(" node server.js ip port")]),t._v(" "),e("h2",{attrs:{id:"yarn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yarn"}},[t._v("#")]),t._v(" yarn")]),t._v(" "),e("h3",{attrs:{id:"brew-install-yarn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#brew-install-yarn"}},[t._v("#")]),t._v(" brew install yarn")]),t._v(" "),e("h3",{attrs:{id:"yarn-yarn-install"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yarn-yarn-install"}},[t._v("#")]),t._v(" yarn/yarn install")]),t._v(" "),e("ul",[e("li",[t._v("安装所有依赖")])]),t._v(" "),e("h3",{attrs:{id:"yarn-serve"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yarn-serve"}},[t._v("#")]),t._v(" yarn serve")]),t._v(" "),e("ul",[e("li",[t._v("运行服务")])]),t._v(" "),e("h2",{attrs:{id:"babel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[t._v("#")]),t._v(" babel")]),t._v(" "),e("h3",{attrs:{id:"babel-core"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#babel-core"}},[t._v("#")]),t._v(" @babel/core")]),t._v(" "),e("ul",[e("li",[t._v("babel的核心api")])]),t._v(" "),e("h3",{attrs:{id:"babel-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#babel-cli"}},[t._v("#")]),t._v(" @babel/cli")]),t._v(" "),e("ul",[e("li",[t._v("这是一个通过命令对js文件进行转换的工具")])]),t._v(" "),e("h3",{attrs:{id:"babel-preset-env"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#babel-preset-env"}},[t._v("#")]),t._v(" @babel/preset-env")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("指定转换的工作环境")]),t._v(" "),e("ul",[e("li",[t._v("之前babel通过几个预设来确定babel如何进行转换，比如babel-preset-es2015是将ES6转成ES5。但是如果浏览器已经支持了该语法还是会进行了转换。@babel/preset-env很好的解决了这一点，它的工作方式是允许你指定环境的同时，仅转换未支持的功能。")])])])]),t._v(" "),e("h3",{attrs:{id:"babel-polyfill-deprecated"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#babel-polyfill-deprecated"}},[t._v("#")]),t._v(" @babel/polyfill(deprecated)")]),t._v(" "),e("ul",[e("li",[t._v('相当于一个填充，因为babel本身只支持转换箭头函数、结构赋值这些语法糖类的语法，而一些新的API或者Promise函数等是无法转换的。@babel/polyfill就是解决这个问题的。但是在babel7.4之后遗弃了，直接使用import "core-js/stable"和import "regenerator-runtime/runtime"')])]),t._v(" "),e("h2",{attrs:{id:"react-native更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-native更新"}},[t._v("#")]),t._v(" React-Native更新")]),t._v(" "),e("h3",{attrs:{id:"npm-install-g-react-native-git-upgrade"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-install-g-react-native-git-upgrade"}},[t._v("#")]),t._v(" npm install -g react-native-git-upgrade")]),t._v(" "),e("h3",{attrs:{id:"react-native-git-upgrade"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-native-git-upgrade"}},[t._v("#")]),t._v(" react-native-git-upgrade")]),t._v(" "),e("h2",{attrs:{id:"解析crash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解析crash"}},[t._v("#")]),t._v(" 解析Crash")]),t._v(" "),e("h3",{attrs:{id:"获取crash文件的uuid-grep-crash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取crash文件的uuid-grep-crash"}},[t._v("#")]),t._v(" 获取crash文件的UUID：grep "),e("appName",[t._v(" *crash")])],1),t._v(" "),e("h3",{attrs:{id:"获取-dsym的uuid-dwarfdump-uuid-app-dsym"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取-dsym的uuid-dwarfdump-uuid-app-dsym"}},[t._v("#")]),t._v(" 获取.dSYM的UUID：dwarfdump --uuid app.dSYM")]),t._v(" "),e("h3",{attrs:{id:"获取主程序的uuid-dwarfdump-uuid-主程序文件路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取主程序的uuid-dwarfdump-uuid-主程序文件路径"}},[t._v("#")]),t._v(" 获取主程序的UUID：dwarfdump --uuid <主程序文件路径>")]),t._v(" "),e("h3",{attrs:{id:"获取symbolicatecrash文件-find-applications-xcode-app-name-symbolicatecrash-type-f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取symbolicatecrash文件-find-applications-xcode-app-name-symbolicatecrash-type-f"}},[t._v("#")]),t._v(" 获取symbolicatecrash文件：find /Applications/Xcode.app -name symbolicatecrash -type f")]),t._v(" "),e("h3",{attrs:{id:"过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("拿到crash文件，拿到dSYM文件，对比他们的UUID是否一致，一致的话进行下一步，不一致无法解析")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("将crash文件、symbolicatecrash文件、dSYM文件放置同目录")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("./symbolicatecrash ./demo.crash ./demo123123.app.dSYM > SymbolCrash.crash")]),t._v(" "),e("ul",[e("li",[t._v('如果报错“Error: "DEVELOPER_DIR" is not defined at ./symbolicatecrash line 69.”，就执行：export DEVELOPER_DIR=/Applications/XCode.app/Contents/Developer')]),t._v(" "),e("li",[t._v("SymbolCrash.crash就是符号化过后的文件，可以看到crash函数")])])])])])])])]),t._v(" "),e("h2",{attrs:{id:"flutter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flutter"}},[t._v("#")]),t._v(" Flutter")]),t._v(" "),e("h3",{attrs:{id:"升级flutter-sdk和依赖包-flutter-upgrade"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级flutter-sdk和依赖包-flutter-upgrade"}},[t._v("#")]),t._v(" 升级Flutter SDK和依赖包：flutter upgrade")]),t._v(" "),e("h3",{attrs:{id:"获取依赖-flutter-packages-get或者flutter-pub-get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取依赖-flutter-packages-get或者flutter-pub-get"}},[t._v("#")]),t._v(" 获取依赖：flutter packages get或者flutter pub get")]),t._v(" "),e("h3",{attrs:{id:"更新-依赖-flutter-packages-upgrade"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新-依赖-flutter-packages-upgrade"}},[t._v("#")]),t._v(" 更新 依赖：flutter packages upgrade")]),t._v(" "),e("h3",{attrs:{id:"创建flutter工程-flutter-create-awesome-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建flutter工程-flutter-create-awesome-app"}},[t._v("#")]),t._v(" 创建flutter工程：flutter create awesome_app")]),t._v(" "),e("h3",{attrs:{id:"创建子模块工程-flutter-create-t-module-modulename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建子模块工程-flutter-create-t-module-modulename"}},[t._v("#")]),t._v(" 创建子模块工程:flutter create -t module moduleName")]),t._v(" "),e("h3",{attrs:{id:"创建工程的native文件-flutter-create-或者flutter-create-org-package-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建工程的native文件-flutter-create-或者flutter-create-org-package-name"}},[t._v("#")]),t._v(" 创建工程的Native文件：flutter create .或者flutter create --org package_name .")]),t._v(" "),e("h3",{attrs:{id:"flutter-build-ios-apk-build-number-1-build-name-1-0-0-release"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flutter-build-ios-apk-build-number-1-build-name-1-0-0-release"}},[t._v("#")]),t._v(" flutter build ios/apk --build-number 1 --build-name 1.0.0 --release")]),t._v(" "),e("h3",{attrs:{id:"原生ios动态调试flutter子模块-flutter-attach或者flutter-attach-d-devicename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原生ios动态调试flutter子模块-flutter-attach或者flutter-attach-d-devicename"}},[t._v("#")]),t._v(" 原生iOS动态调试flutter子模块：flutter attach或者flutter attach -d 'deviceName'")]),t._v(" "),e("h3",{attrs:{id:"生成generated-xcconfig文件-同步pubspec-yaml版本号到native-flutter-build-ios"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成generated-xcconfig文件-同步pubspec-yaml版本号到native-flutter-build-ios"}},[t._v("#")]),t._v(" 生成generated.xcconfig文件/同步pubspec.yaml版本号到native：flutter build ios")]),t._v(" "),e("h3",{attrs:{id:"release模式运行-flutter-run-release"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#release模式运行-flutter-run-release"}},[t._v("#")]),t._v(" release模式运行：flutter run --release")]),t._v(" "),e("h3",{attrs:{id:"第三方库网址-pub-dev"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三方库网址-pub-dev"}},[t._v("#")]),t._v(" 第三方库网址：pub.dev")]),t._v(" "),e("h2",{attrs:{id:"python"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[t._v("#")]),t._v(" Python")]),t._v(" "),e("h3",{attrs:{id:"brew-install-python3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#brew-install-python3"}},[t._v("#")]),t._v(" brew install python3")]),t._v(" "),e("h3",{attrs:{id:"创建虚拟环境-python3-m-venv-env"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建虚拟环境-python3-m-venv-env"}},[t._v("#")]),t._v(" 创建虚拟环境：python3 -m venv env")]),t._v(" "),e("h3",{attrs:{id:"vscode-开启新项目-python-select-interpreter-选择-env-bin-python"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vscode-开启新项目-python-select-interpreter-选择-env-bin-python"}},[t._v("#")]),t._v(" VSCode 开启新项目：Python: Select Interpreter，选择./env/bin/python")]),t._v(" "),e("h3",{attrs:{id:"开启虚拟环境-source-env-bin-activate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开启虚拟环境-source-env-bin-activate"}},[t._v("#")]),t._v(" 开启虚拟环境：source env/bin/activate")]),t._v(" "),e("h3",{attrs:{id:"开启虚拟环境后安装flask-pip3-install-flask"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开启虚拟环境后安装flask-pip3-install-flask"}},[t._v("#")]),t._v(" 开启虚拟环境后安装flask：pip3 install flask")]),t._v(" "),e("h3",{attrs:{id:"更新flask-pip3-install-upgrade-flask"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新flask-pip3-install-upgrade-flask"}},[t._v("#")]),t._v(" 更新flask:pip3 install --upgrade flask")]),t._v(" "),e("h3",{attrs:{id:"列出所有依赖-pip3-list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列出所有依赖-pip3-list"}},[t._v("#")]),t._v(" 列出所有依赖：pip3 list")]),t._v(" "),e("h3",{attrs:{id:"生成requirements-txt依赖文件-pip-freeze-requirements-txt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成requirements-txt依赖文件-pip-freeze-requirements-txt"}},[t._v("#")]),t._v(" 生成requirements.txt依赖文件：pip freeze > requirements.txt")]),t._v(" "),e("h3",{attrs:{id:"安装依赖-pip-install-r-requirements-txt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖-pip-install-r-requirements-txt"}},[t._v("#")]),t._v(" 安装依赖：pip install -r requirements.txt")]),t._v(" "),e("h3",{attrs:{id:"第三方库网址-pypi-org"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三方库网址-pypi-org"}},[t._v("#")]),t._v(" 第三方库网址：pypi.org")]),t._v(" "),e("h3",{attrs:{id:"_1-初始化migrations-python-manage-py-db-init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-初始化migrations-python-manage-py-db-init"}},[t._v("#")]),t._v(" 1.初始化migrations:python manage.py db init")]),t._v(" "),e("h3",{attrs:{id:"_2-创建迁移脚本-python-manage-py-db-migrate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建迁移脚本-python-manage-py-db-migrate"}},[t._v("#")]),t._v(" 2.创建迁移脚本：python manage.py db migrate")]),t._v(" "),e("h3",{attrs:{id:"_3-更新数据库-python-manage-py-db-upgrade"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-更新数据库-python-manage-py-db-upgrade"}},[t._v("#")]),t._v(" 3.更新数据库：python manage.py db upgrade")]),t._v(" "),e("h2",{attrs:{id:"framework合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#framework合并"}},[t._v("#")]),t._v(" framework合并")]),t._v(" "),e("h3",{attrs:{id:"lipo-create-arm64-lib-libmp3lame-a-armv7-lib-libmp3lame-a-output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lipo-create-arm64-lib-libmp3lame-a-armv7-lib-libmp3lame-a-output"}},[t._v("#")]),t._v(" lipo -create ./arm64/lib/libmp3lame.a ./armv7/lib/libmp3lame.a -output")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("       libmp3lame.a\n")])])]),e("h3",{attrs:{id:"查看framework信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看framework信息"}},[t._v("#")]),t._v(" 查看framework信息")]),t._v(" "),e("ul",[e("li",[t._v("file libmp3lame.a")]),t._v(" "),e("li",[t._v("lipo -info")])]),t._v(" "),e("h2",{attrs:{id:"查看端口占用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看端口占用"}},[t._v("#")]),t._v(" 查看端口占用")]),t._v(" "),e("h3",{attrs:{id:"lsof-i-8081"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lsof-i-8081"}},[t._v("#")]),t._v(" lsof  -i :8081")]),t._v(" "),e("h3",{attrs:{id:"kill-9-pid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kill-9-pid"}},[t._v("#")]),t._v(" kill -9 PID")]),t._v(" "),e("h2",{attrs:{id:"编译程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译程序"}},[t._v("#")]),t._v(" 编译程序")]),t._v(" "),e("h3",{attrs:{id:"预处理clang-e-test-cpp-o-test-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#预处理clang-e-test-cpp-o-test-i"}},[t._v("#")]),t._v(" 预处理clang++ -E test.cpp -o test.i")]),t._v(" "),e("p",[t._v("这一阶段的过程主要是对包含源代码的文本文件进行处理。主要的处理内容就是将在源文件中包含的头文件加载到文件中，替换宏定义等等。最终生成的文件是以 . i .i .i结尾的文本文件。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("编译clang++ -S test.i -o test.s")]),t._v(" "),e("p",[t._v("这个阶段是将预处理得到的文件经由编译器变成汇编语言。汇编语言中的每一条语句都以一种标准的文本格式准确的描述一条地址机器指令。在这个阶段生成的文件才是机器相关的代码。这个阶段生成以 . s .s .s结尾的汇编文本文件。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("汇编clang++ -c test.s -o test.o")]),t._v(" "),e("p",[t._v("这个阶段就是将上一步得到的汇编文件汇编成机器指令，从而把这些指令打包成为一种可重定向的目标程序格式。这个时候生成以 . o ​ .o​ .o​结尾的二进制文件。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("链接clang++ test.o -o test.exe")]),t._v(" "),e("p",[t._v("这个阶段主要是处理在文件中调用了系统库例如 c i n cin cin等函数，那么就需要将系统库中的 c i n . o cin.o cin.o合并到我们生成的 t e s t . o test.o test.o中。生成可执行的以结尾的 . e x e .exe .exe二进制文件。")])])])])])])]),t._v(" "),e("h3",{attrs:{id:"gcc-g-test-c-o-test-o"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gcc-g-test-c-o-test-o"}},[t._v("#")]),t._v(" gcc -g test.c -o test.o")]),t._v(" "),e("h3",{attrs:{id:"g-g-test-cpp-o-test-out"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#g-g-test-cpp-o-test-out"}},[t._v("#")]),t._v(" g++ -g test.cpp -o test.out")]),t._v(" "),e("p",[t._v("-g 表示debug")]),t._v(" "),e("p",[e("em",[t._v("XMind - Trial Version")])])])}),[],!1,null,null,null);a.default=s.exports}}]);