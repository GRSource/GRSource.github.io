(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{552:function(e,t,a){"use strict";a.r(t);var n=a(65),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"ffmpeg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ffmpeg"}},[e._v("#")]),e._v(" FFmpeg")]),e._v(" "),a("p",[e._v("1.注册协议、格式与编码器（FFmpeg4.0 deprecated）")]),e._v(" "),a("div",{staticClass:"language-C++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  avformat_network_init();\n  av_register_all();\n")])])]),a("p",[e._v("2.打开媒体文件，并设置超时回调")]),e._v(" "),a("div",{staticClass:"language-C++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("  AVFormatContext *avFormatContext = avformat_alloc_context();\n  AVIOInterruptCB int_cb = { interrupt_callback, (__bridge void *)(self)};\n  avFormatContext->interrupt_callback = int_cb;\n  avformat_find_stream_info(avFormatContext, NULL);\n")])])]),a("p",[e._v("3.寻找各个流")]),e._v(" "),a("div",{staticClass:"language-C++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("    int videoStreamIndex = 0;\n    int audioStreamIndex = 0;\n    for (int i = 0; i < avFormatContext->nb_streams; i++) {\n        AVStream *stream = avFormatContext->streams[i];\n        if (stream->codecpar->codec_type == AVMEDIA_TYPE_VIDEO) {\n            videoStreamIndex = i;\n        } else {\n            audioStreamIndex = i;\n        }\n    }\n")])])]),a("p",[e._v("4.打开音频流解码器")]),e._v(" "),a("div",{staticClass:"language-C++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("AVStream *audioStream = avFormatContext->streams[audioStreamIndex];\n    AVCodec *audioCodec = avcodec_find_decoder(audioStream->codecpar->codec_id);\n    if (!audioCodec) {\n        //找不到音频解码器\n    }\n    AVCodecContext *audioCodecCtx = avcodec_alloc_context3(audioCodec);\n    int openCodecErrCode = 0;\n    if ((openCodecErrCode = avcodec_open2(audioCodecCtx, audioCodec, NULL)) < 0) {\n        //打开音频解码器失败\n    }\n")])])]),a("p",[e._v("5.打开视频流解码器")]),e._v(" "),a("div",{staticClass:"language-C++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("AVStream *videoStream = avFormatContext->streams[videoStreamIndex];\n    AVCodec *videoCodec = avcodec_find_decoder(videoStream->codecpar->codec_id);\n    if (!videoCodec) {\n        //找不到视频解码器\n    }\n    AVCodecContext *videoCodecCtx = avcodec_alloc_context3(videoCodec);\n    if (avcodec_open2(videoCodecCtx, videoCodec, NULL) < 0) {\n        //打开视频解码器失败\n    }\n")])])]),a("p",[e._v("5.初始化音频解码后的结构体")]),e._v(" "),a("div",{staticClass:"language-C++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SwrContext *swrContext = NULL;\n    if (audioCodecCtx->sample_fmt != AV_SAMPLE_FMT_S16) {\n        //如果不是我们需要的数据格式\n        int nb_channels = 2;\n        int64_t outputChannel = av_get_default_channel_layout(nb_channels);\n        int64_t inputChannel = av_get_default_channel_layout(audioCodecCtx->channels);\n        int out_sample_rate = 44100;\n        swrContext = swr_alloc_set_opts(NULL, outputChannel, AV_SAMPLE_FMT_S16, out_sample_rate, inputChannel, audioCodecCtx->sample_fmt, audioCodecCtx->sample_rate, 0, NULL);\n        if (!swrContext || swr_init(swrContext)) {\n            if (swrContext) {\n                swr_free(&swrContext);\n            }\n        }\n        AVFrame *audioFrame = av_frame_alloc();\n    }\n")])])]),a("p",[e._v("6.初始化视频解码后的结构体")]),e._v(" "),a("div",{staticClass:"language-C++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SwsContext *swsContext = NULL;\n    swsContext = sws_getCachedContext(swsContext, videoCodecCtx->width, videoCodecCtx->height, videoCodecCtx->pix_fmt, videoCodecCtx->width, videoCodecCtx->height, AV_PIX_FMT_YUV420P, SWS_FAST_BILINEAR, NULL, NULL, NULL);\n    AVFrame *videoFrame = av_frame_alloc();\n")])])]),a("p",[e._v("7.读取流内容并解码")]),e._v(" "),a("div",{staticClass:"language-C++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("AVPacket packet;\n    while (true) {\n        if (av_read_frame(avFormatContext, &packet)) {\n            //error or end of file\n            break;\n        }\n        int packetStreamIndex = packet.stream_index;\n        if (packetStreamIndex == videoStreamIndex) {\n            if (avcodec_send_packet(videoCodecCtx, &packet)) {\n                //error or EOF or again\n            }\n            while (avcodec_receive_frame(videoCodecCtx, videoFrame) == 0) {\n                //handle video frame\n            }\n        } else if (packetStreamIndex == audioStreamIndex) {\n            if (avcodec_send_packet(audioCodecCtx, &packet)) {\n                //error or EOF or again\n            }\n            while (avcodec_receive_frame(audioCodecCtx, audioFrame)) {\n                //handle audio frame\n            }\n        }\n        \n    }\n")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);