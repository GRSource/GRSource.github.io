(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{566:function(t,v,_){"use strict";_.r(v);var a=_(65),e=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#加密"}},[t._v("#")]),t._v(" 加密")]),t._v(" "),_("h2",{attrs:{id:"加密种类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#加密种类"}},[t._v("#")]),t._v(" 加密种类")]),t._v(" "),_("h3",{attrs:{id:"非对称加密算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密算法"}},[t._v("#")]),t._v(" 非对称加密算法")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("成熟度")]),t._v(" "),_("th",[t._v("安全性(取决于密钥长度)")]),t._v(" "),_("th",[t._v("运算速度")]),t._v(" "),_("th",[t._v("资源消耗")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("RSA")]),t._v(" "),_("td",[t._v("高")]),t._v(" "),_("td",[t._v("高")]),t._v(" "),_("td",[t._v("慢")]),t._v(" "),_("td",[t._v("高")])]),t._v(" "),_("tr",[_("td",[t._v("DSA")]),t._v(" "),_("td",[t._v("高")]),t._v(" "),_("td",[t._v("高")]),t._v(" "),_("td",[t._v("慢")]),t._v(" "),_("td",[t._v("只能用于数字签名")])]),t._v(" "),_("tr",[_("td",[t._v("ECC")]),t._v(" "),_("td",[t._v("低")]),t._v(" "),_("td",[t._v("高")]),t._v(" "),_("td",[t._v("快")]),t._v(" "),_("td",[t._v("低(计算量小，存储空间占用小，带宽要求低)")])])])]),t._v(" "),_("h3",{attrs:{id:"对称加密算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对称加密算法"}},[t._v("#")]),t._v(" 对称加密算法")]),t._v(" "),_("ul",[_("li",[t._v("AES"),_("br"),t._v("\nAES为分组密码，分组密码也就是把明文分成一组一组的，每组长度相等，每次加密一组数据，知道加密完整个明文。在AES标准规范中，分组长度只能是128位，也就是说，每个分组为16个字节（每个字节8位）。密钥的长度可以使用128位、192位或256位。密钥的长度不同，推荐加密轮数也不同，如下表所示：")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("AES")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("密钥长度（字节）")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("分组长度（字节）")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("加密轮数")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("AES-128")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("10")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("AES-192")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("24")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("12")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("AES-256")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("32")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("14")])])])]),t._v(" "),_("p",[t._v("对称加密算法比较")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("密钥长度")]),t._v(" "),_("th",[t._v("运算速度")]),t._v(" "),_("th",[t._v("安全性")]),t._v(" "),_("th",[t._v("资源消耗")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("DES")]),t._v(" "),_("td",[t._v("56位")]),t._v(" "),_("td",[t._v("较快")]),t._v(" "),_("td",[t._v("低")]),t._v(" "),_("td",[t._v("中")])]),t._v(" "),_("tr",[_("td",[t._v("3DES")]),t._v(" "),_("td",[t._v("112位或168位")]),t._v(" "),_("td",[t._v("慢")]),t._v(" "),_("td",[t._v("中")]),t._v(" "),_("td",[t._v("高")])]),t._v(" "),_("tr",[_("td",[t._v("AES")]),t._v(" "),_("td",[t._v("128、192、256位")]),t._v(" "),_("td",[t._v("快")]),t._v(" "),_("td",[t._v("高")]),t._v(" "),_("td",[t._v("低")])])])]),t._v(" "),_("h3",{attrs:{id:"rsa加密算法在https中所起的作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#rsa加密算法在https中所起的作用"}},[t._v("#")]),t._v(" RSA加密算法在HTTPS中所起的作用")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://blog.csdn.net/xiaopang_yan/article/details/78709574",target:"_blank",rel:"noopener noreferrer"}},[t._v("https流程"),_("OutboundLink")],1)]),t._v(" "),_("ul",[_("li",[t._v("因为私钥只有服务器拥有，因此客户可以通过判断对方是否有私钥来判断对方是否是服务器。")]),t._v(" "),_("li",[t._v("客户端通过RSA的掩护，安全的和服务器商量好一个对称加密算法和秘钥来保证后面通信过程内容的安全。")])]),t._v(" "),_("p",[t._v("为什么不直接使用RSA来通信呢？"),_("br"),t._v("\n假如服务器直接使用RSA私钥加密传输信息，任何拥有公钥的中间人都可以进行解密，不安全，所以需要通过客户端生成对称加密算法，通过RSA公钥加密将对称加密秘钥发给服务端，服务端和客户端以后就可以使用对称加密算法来进行通信，因为对称秘钥只有客户端和服务端知道。")]),t._v(" "),_("p",[t._v("那客户端是怎样拿到服务端的RSA公钥的呢？"),_("br"),t._v("\n如果通过服务端直接发送公钥给客户端，你怎么知道发送给你的公钥是真正的服务端发送的，而不是中间人发送的呢？问题就在于大家都能生成公钥私钥，无法确认公钥对到底是谁的。如果能够确定公钥到底是谁的，就不会有这个问题了。"),_("br"),t._v("\n为了解决这个问题，数字证书出现了，它可以解决我们上面的问题，先大概看一些什么是数字证书，一个证书包含下面具体内容：")]),t._v(" "),_("ul",[_("li",[t._v("证书的发布机构")]),t._v(" "),_("li",[t._v("证书的有效期")]),t._v(" "),_("li",[t._v("公钥")]),t._v(" "),_("li",[t._v("证书所有者")]),t._v(" "),_("li",[t._v("签名所使用的算法")]),t._v(" "),_("li",[t._v("指纹以及指纹算法")])]),t._v(" "),_("div",{staticClass:"language-C extra-class"},[_("pre",{pre:!0,attrs:{class:"language-c"}},[_("code",[t._v("“客户”"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("“服务器”：你好\n\n“服务器”"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("“客户”：你好，我是服务器，这里是我的数字证书        "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里用证书代替了公钥")]),t._v("\n\n“客户”"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("“服务器”：向我证明你就是服务器\n\n“服务器”"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("“客户”：你好，我是服务器 "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("你好，我是服务器"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("私钥"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("RSA"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),_("p",[t._v("服务器把自己的证书发给了客户，而不是发送公钥。客户可以根据证书校验这个证书到底是不是服务器的，也就是能校验这个证书的所有者是不是服务器，从而确认这个证书中的公钥的确是服务器的。后面的过程就是服务器通过RSA私钥加密一段内容联通明文一起发给客户，客户把加密内容用数字证书中的公钥解密和明文对比，如果一直就确实是服务器，然后双方协商一个对称加密来保证通信过程的安全。")]),t._v(" "),_("h3",{attrs:{id:"签名"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#签名"}},[t._v("#")]),t._v(" 签名")]),t._v(" "),_("p",[t._v("签名就是在信息的后面再加上一段内容，可以证明信息没有被修改过，怎么样可以达到这个效果呢？一般是对信息做一个hash计算得到一个hash值，注意这个过程是不可逆的，也就是说无法通过hash值得出原来的信息内容。在把信息发送出去时，把这个hash值加密后作为一个签名和信息一起发送出去。接收方在收到信息后，会重新计算信息的hash值，所以只要内容一被修改，根据信息内容计算的hash值就会变化。当然，不怀好意的人也可以修改信息内容的同时也修改hash值，从而让它们可以像匹配，为了防止这种情况，hash值一般都会加密后(也就是签名)再和信息一起发送，以保证这个hash值不被修改。至于如何让别人可以解密这个签名，这个过程涉及到数字证书等概念。")]),t._v(" "),_("h2",{attrs:{id:"二次加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二次加密"}},[t._v("#")]),t._v(" 二次加密")]),t._v(" "),_("p",[t._v("https 能保证的是连接的安全，当我们打开网站的时候，是需要和服务器进行通信的，那么 https 能够保证在通信时数据传输是安全的。")]),t._v(" "),_("p",[t._v('如果我们打开一个网页，在网址的前面有标明"https"的话，那么就说明这个网站有证书并且有进行加密的操作。但是，不少钓鱼网页其实也可以使用 https，这就说明了 https 并不能保证网站本身是安全的。举个例子，如果你在一个网页上输入账号密码的话，使用 https 的网页能够保证你的账号密码在传到网站服务器的过程中不会被其他的东西干扰或者盗取，但是，你输入的账号密码却有可能被你正在访问的这个网页盗用。')]),t._v(" "),_("p",[t._v("再举个例子：移动端手机种了木马，终端被攻击了，那么对于传输通道进行加密就毫无意义，试想人家都跑到你家里面去了，所有的东西在内存跟硬盘里面都有，再进行网络监听毫无意义。")]),t._v(" "),_("p",[t._v("所以 https 本身是安全的，至少在网络传输过程中，能够保证传输数据的完整性和一致性。但是并不代表它的宿主是安全的，所以如果是金融类，支付类等对安全等级要求很高的软件，最好进行二次加密。")]),t._v(" "),_("p",[t._v("有些金融类的app除了使用HTTPS之外还会对数据进行二次加密，下面对aes进行分析一下："),_("br"),t._v("\n如果是服务端用rsa私钥加密aes密钥，其他任何人都有公钥，不能由服务端生成aes密钥"),_("br"),t._v("\n如果是服务端用rsa公钥加密aes密钥，只有客户端有私钥，客户端私钥存哪里呢？不能由服务端生成aes密钥"),_("br"),t._v("\n如果是客户端用rsa公钥加密aes密钥，只有服务端能解，可以由客户端生成aes密钥"),_("br"),t._v("\n如果是客户端用rsa私钥加密aes密钥，又会有私钥怎么存的问题。")]),t._v(" "),_("p",[t._v("所以aes密钥是客户端动态生成的，而不是服务端，原理跟https一样")]),t._v(" "),_("h2",{attrs:{id:"常用的加密方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常用的加密方式"}},[t._v("#")]),t._v(" 常用的加密方式")]),t._v(" "),_("p",[t._v("常见加密算法")]),t._v(" "),_("ol",[_("li",[t._v("DES（Data Encryption Standard）：对称算法，数据加密标准，速度较快，适用于加密大量数据的场合；")]),t._v(" "),_("li",[t._v("3DES（Triple DES）：是基于DES的对称算法，对一块数据用三个不同的密钥进行三次加密，强度更高；")]),t._v(" "),_("li",[t._v("RC2和RC4：对称算法，用变长密钥对大量数据进行加密，比 DES 快；")]),t._v(" "),_("li",[t._v("IDEA（International Data Encryption Algorithm）国际数据加密算法，使用 128 位密钥提供非常强的安全性；")]),t._v(" "),_("li",[t._v("RSA：由 RSA 公司发明，是一个支持变长密钥的公共密钥算法，需要加密的文件块的长度也是可变的，非对称算法；")]),t._v(" "),_("li",[t._v("DSA（Digital Signature Algorithm）：数字签名算法，是一种标准的 DSS（数字签名标准），严格来说不算加密算法；")]),t._v(" "),_("li",[t._v("AES（Advanced Encryption Standard）：高级加密标准，对称算法，是下一代的加密算法标准，速度快，安全级别高，在21世纪AES 标准的一个实现是 Rijndael 算法；")]),t._v(" "),_("li",[t._v("BLOWFISH，它使用变长的密钥，长度可达448位，运行速度很快；")]),t._v(" "),_("li",[t._v("MD5：严格来说不算加密算法，只能说是摘要算法；")]),t._v(" "),_("li",[t._v("PKCS:The Public-Key Cryptography Standards (PKCS)是由美国RSA数据安全公司及其合作伙伴制定的一组公钥密码学标准，其中包括证书申请、证书更新、证书作废表发布、扩展证书内容以及数字签名、数字信封的格式等方面的一系列相关协议。")]),t._v(" "),_("li",[t._v("SSF33，SSF28，SCB2(SM1)：国家密码局的隐蔽不公开的商用算法，在国内民用和商用的，除这些都不容许使用外，其他的都可以使用；")]),t._v(" "),_("li",[t._v("ECC（Elliptic Curves Cryptography）：椭圆曲线密码编码学。")]),t._v(" "),_("li",[t._v("TEA(Tiny Encryption Algorithm)简单高效的加密算法，加密解密速度快，实现简单。但安全性不如DES，QQ一直用tea加密")]),t._v(" "),_("li",[t._v("TLS 1.3不在支持RSA静态密钥交换，可以使用带有前向安全的Diffie-Hellman（迪菲赫尔曼）。")])]),t._v(" "),_("h2",{attrs:{id:"加密实战"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#加密实战"}},[t._v("#")]),t._v(" 加密实战")]),t._v(" "),_("p",[t._v("AES"),_("br"),t._v("\nAES加密有四种工作模式：ECB/CBC/CFB/OFB，其中iOS支持CBC(KCCOptionPKCS7Padding)和ECB(KCCOptionECBMode)")])])}),[],!1,null,null,null);v.default=e.exports}}]);