(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{600:function(a,t,e){"use strict";e.r(t);var s=e(65),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"ui视图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ui视图"}},[a._v("#")]),a._v(" UI视图")]),a._v(" "),e("h2",{attrs:{id:"卡顿-掉帧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卡顿-掉帧"}},[a._v("#")]),a._v(" 卡顿&掉帧")]),a._v(" "),e("p",[a._v("优化方案：\nCPU\n对象创建、调整、销毁\n预排版（布局计算、文本计算）\n预渲染（文本等异步绘制、图片编解码 ）\nGPU\n纹理渲染，如maskToBounds、layer圆角\n视图混合")]),a._v(" "),e("h2",{attrs:{id:"绘制原理-异步绘制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#绘制原理-异步绘制"}},[a._v("#")]),a._v(" 绘制原理&异步绘制")]),a._v(" "),e("p",[a._v("系统绘制")]),a._v(" "),e("h2",{attrs:{id:"离屏渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#离屏渲染"}},[a._v("#")]),a._v(" 离屏渲染")]),a._v(" "),e("p",[a._v("离屏渲染会创建新的渲染缓冲区，和上下文切换，产生了额外的GPU开销")]),a._v(" "),e("h3",{attrs:{id:"圆角结合masktobounds"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#圆角结合masktobounds"}},[a._v("#")]),a._v(" 圆角结合maskToBounds")]),a._v(" "),e("h3",{attrs:{id:"图层蒙版"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图层蒙版"}},[a._v("#")]),a._v(" 图层蒙版")]),a._v(" "),e("h3",{attrs:{id:"阴影"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#阴影"}},[a._v("#")]),a._v(" 阴影")]),a._v(" "),e("h3",{attrs:{id:"光栅化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#光栅化"}},[a._v("#")]),a._v(" 光栅化")]),a._v(" "),e("h2",{attrs:{id:"图像显示原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图像显示原理"}},[a._v("#")]),a._v(" 图像显示原理")]),a._v(" "),e("h2",{attrs:{id:"事件传递-视图响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件传递-视图响应"}},[a._v("#")]),a._v(" 事件传递&视图响应")]),a._v(" "),e("p",[a._v("事件传递：\n点击屏幕 --\x3e UIApplication --\x3e UIWindow --\x3e hitTest:withEvent: --\x3e 内部通过pointInside:withEvent:判断是否在响应范围之内 --\x3e 倒序遍历子视图(最后添加的视图优先遍历)--\x3e每个UIView中都会调用hitTest方法--\x3e如果hitTest返回的某个view不为空，那么久找到最终的响应视图，事件传递就结束。\n响应流程：\nUIlabel ->UIView -> UIView  ->UIViewController ->UIWindow ->UIApplication ->UIApplicationDelegate --\x3etouchesBegan:withEvent:\ntouchesMoved:withEvent:\ntouchesEnded:withEvent:\n如果传递到UIApplicationDelegate都没处理，就丢掉此次响应")]),a._v(" "),e("h3",{attrs:{id:"ishidden"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ishidden"}},[a._v("#")]),a._v(" isHidden")]),a._v(" "),e("h3",{attrs:{id:"isuserinteractionenabled"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isuserinteractionenabled"}},[a._v("#")]),a._v(" isUserInteractionEnabled")]),a._v(" "),e("h3",{attrs:{id:"alpha-0-01"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#alpha-0-01"}},[a._v("#")]),a._v(" alpha > 0.01")]),a._v(" "),e("h2",{attrs:{id:"uitableview相关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uitableview相关"}},[a._v("#")]),a._v(" UITableView相关")]),a._v(" "),e("h3",{attrs:{id:"重用机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重用机制"}},[a._v("#")]),a._v(" 重用机制")]),a._v(" "),e("h3",{attrs:{id:"数据源同步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据源同步"}},[a._v("#")]),a._v(" 数据源同步")]),a._v(" "),e("h2",{attrs:{id:"uiview和calayer的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uiview和calayer的区别"}},[a._v("#")]),a._v(" UIView和CALayer的区别")]),a._v(" "),e("p",[a._v("UIView负责事件的传递和视图响应，CALayer负责UI视图的显示工作。用到了六大设计原则中的单一职责原则")]),a._v(" "),e("p",[e("em",[a._v("XMind - Trial Version")])])])}),[],!1,null,null,null);t.default=r.exports}}]);